<%- include('./partials/header') %>

    <% if(error && error.length > 0){ %>
        <div class="fixed top-5 left-1/2 transform -translate-x-1/2 p-4 rounded-lg bg-red-500 text-white z-50 shadow-lg">
            <div class="flex items-center">
                <i class="ri-error-warning-line mr-2"></i>
                <span><%= error[0] %></span>
            </div>
        </div>
        <% } %>
        
    <% if(success && success.length > 0){ %>
        <div class="fixed top-5 left-1/2 transform -translate-x-1/2 p-4 rounded-lg bg-green-500 text-white z-50 shadow-lg">
            <div class="flex items-center">
                <i class="ri-check-line mr-2"></i>
                <span><%= success[0] %></span>
            </div>
        </div>
        <% } %>

    <!-- Main Cart Content -->
    <div class="min-h-screen bg-gray-50 pt-16">
        
        <!-- Header Section -->
        <div class="bg-gradient-to-r from-blue-600 to-purple-700 text-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
                <div class="text-center">
                    <h1 class="text-4xl font-bold mb-2">Shopping Cart</h1>
                    <p class="text-xl opacity-90">Review your items before checkout</p>
                </div>
            </div>
        </div>

        <!-- Cart Content -->
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
            <% if(cartItems && cartItems.length > 0) { %>
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    
                    <!-- Cart Items -->
                    <div class="lg:col-span-2">
                        <div class="bg-white rounded-lg shadow-sm p-6">
                            <h2 class="text-xl font-semibold text-gray-900 mb-6">Cart Items (<%= cartItems.length %>)</h2>
                            
                            <div class="space-y-4">
                                <% cartItems.forEach(function(item){ %>
                                    <div class="flex items-center space-x-4 p-4 border border-gray-200 rounded-lg cart-item" data-product-id="<%= item.productId %>">
                                        
                                        <!-- Product Image -->
                                        <div class="flex-shrink-0">
                                            <img class="w-20 h-20 object-cover rounded-lg" 
                                                 src="data:image/jpeg;base64,<%= item.image.toString('base64') %>" 
                                                 alt="<%= item.name %>">
                                        </div>

                                        <!-- Product Details -->
                                        <div class="flex-1 min-w-0">
                                            <h3 class="text-lg font-medium text-gray-900 truncate"><%= item.name %></h3>
                                            <div class="flex items-center space-x-2 mt-1">
                                                <% if(item.discount && item.discount > 0) { %>
                                                    <span class="text-lg font-bold text-blue-600">₹<%= Math.round(item.price * (1 - item.discount/100)) %></span>
                                                    <span class="text-sm text-gray-500 line-through">₹<%= item.price %></span>
                                                    <span class="text-xs bg-red-100 text-red-800 px-2 py-1 rounded">-<%= item.discount %>%</span>
                                                <% } else { %>
                                                    <span class="text-lg font-bold text-blue-600">₹<%= item.price %></span>
                                                <% } %>
                                            </div>
                                        </div>

                                        <!-- Quantity Controls -->
                                        <div class="flex items-center space-x-3">
                                            <button onclick="updateQuantity('<%= item.productId %>', <%= item.quantity - 1 %>)" 
                                                    class="w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center">
                                                <i class="ri-subtract-line text-sm"></i>
                                            </button>
                                            <span class="font-medium text-gray-900 w-8 text-center quantity-display"><%= item.quantity %></span>
                                            <button onclick="updateQuantity('<%= item.productId %>', <%= item.quantity + 1 %>)" 
                                                    class="w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center">
                                                <i class="ri-add-line text-sm"></i>
                                            </button>
                                        </div>

                                        <!-- Item Total -->
                                        <div class="text-right">
                                            <% const itemPrice = item.discount > 0 ? Math.round(item.price * (1 - item.discount/100)) : item.price %>
                                            <div class="text-lg font-bold text-gray-900 item-total">₹<%= itemPrice * item.quantity %></div>
                                        </div>

                                        <!-- Remove Button -->
                                        <button onclick="removeFromCart('<%= item.productId %>')" 
                                                class="text-red-500 hover:text-red-700 p-2">
                                            <i class="ri-delete-bin-line text-lg"></i>
                                        </button>
                                    </div>
                                <% }) %>
                            </div>
                        </div>
                    </div>

                    <!-- Order Summary -->
                    <div class="lg:col-span-1">
                        <div class="bg-white rounded-lg shadow-sm p-6 sticky top-24">
                            <h2 class="text-xl font-semibold text-gray-900 mb-6">Order Summary</h2>
                            
                            <div class="space-y-4">
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Subtotal:</span>
                                    <span class="font-medium" id="subtotal">₹<%= 
                                        cartItems.reduce((total, item) => {
                                            const itemPrice = item.discount > 0 ? Math.round(item.price * (1 - item.discount/100)) : item.price;
                                            return total + (itemPrice * item.quantity);
                                        }, 0)
                                    %></span>
                                </div>
                                
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Shipping:</span>
                                    <span class="font-medium text-green-600">Free</span>
                                </div>
                                
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Tax:</span>
                                    <span class="font-medium">₹0</span>
                                </div>
                                
                                <hr class="border-gray-200">
                                
                                <div class="flex justify-between text-lg">
                                    <span class="font-semibold text-gray-900">Total:</span>
                                    <span class="font-bold text-blue-600" id="total">₹<%= 
                                        cartItems.reduce((total, item) => {
                                            const itemPrice = item.discount > 0 ? Math.round(item.price * (1 - item.discount/100)) : item.price;
                                            return total + (itemPrice * item.quantity);
                                        }, 0)
                                    %></span>
                                </div>
                            </div>

                            <button class="w-full bg-gradient-to-r from-blue-600 to-purple-700 text-white py-3 px-6 rounded-lg font-semibold hover:from-blue-700 hover:to-purple-800 transition-all duration-200 mt-6">
                                <i class="ri-secure-payment-line mr-2"></i>
                                Proceed to Checkout
                            </button>

                            <a href="/shop" class="block text-center text-blue-600 hover:text-blue-700 mt-4">
                                <i class="ri-arrow-left-line mr-1"></i>
                                Continue Shopping
                            </a>
                        </div>
                    </div>
                </div>
            <% } else { %>
                <!-- Empty Cart -->
                <div class="text-center py-16">
                    <div class="max-w-md mx-auto">
                        <i class="ri-shopping-cart-line text-6xl text-gray-400 mb-4"></i>
                        <h3 class="text-xl font-semibold text-gray-900 mb-2">Your cart is empty</h3>
                        <p class="text-gray-600 mb-6">Looks like you haven't added any items to your cart yet.</p>
                        <a href="/shop" class="inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                            <i class="ri-shopping-bag-line mr-2"></i>
                            Start Shopping
                        </a>
                    </div>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Auto-hide flash messages -->
    <script>
        // Flash message auto-hide
        setTimeout(function() {
            const flashMessages = document.querySelectorAll('[class*="fixed top-5"]');
            flashMessages.forEach(function(msg) {
                msg.style.transition = 'opacity 0.5s';
                msg.style.opacity = '0';
                setTimeout(function() {
                    msg.remove();
                }, 500);
            });
        }, 4000);

        // Cart functionality
        function updateQuantity(productId, newQuantity) {
            if (newQuantity < 1) {
                removeFromCart(productId);
                return;
            }

            fetch('/update-cart-quantity', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId,
                    quantity: newQuantity
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update the quantity display
                    const cartItem = document.querySelector(`[data-product-id="${productId}"]`);
                    cartItem.querySelector('.quantity-display').textContent = newQuantity;
                    
                    // Recalculate totals
                    updateCartTotals();
                    showNotification('Cart updated successfully', 'success');
                } else {
                    showNotification(data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error updating quantity:', error);
                showNotification('Error updating cart', 'error');
            });
        }

        function removeFromCart(productId) {
            if (!confirm('Are you sure you want to remove this item from your cart?')) {
                return;
            }

            fetch('/remove-from-cart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Remove the item from DOM
                    const cartItem = document.querySelector(`[data-product-id="${productId}"]`);
                    cartItem.remove();
                    
                    // Update cart count in header
                    document.getElementById('cartCount').textContent = data.cartCount;
                    
                    // Update totals
                    updateCartTotals();
                    
                    // If cart is empty, reload page to show empty state
                    if (data.cartCount === 0) {
                        location.reload();
                    }
                    
                    showNotification(data.message, 'success');
                } else {
                    showNotification(data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error removing from cart:', error);
                showNotification('Error removing item', 'error');
            });
        }

        function updateCartTotals() {
            let subtotal = 0;
            
            document.querySelectorAll('.cart-item').forEach(item => {
                const quantity = parseInt(item.querySelector('.quantity-display').textContent);
                const itemTotalElement = item.querySelector('.item-total');
                const priceText = itemTotalElement.textContent.replace('₹', '');
                const unitPrice = parseInt(priceText) / quantity;
                const newItemTotal = unitPrice * quantity;
                
                itemTotalElement.textContent = `₹${newItemTotal}`;
                subtotal += newItemTotal;
            });
            
            document.getElementById('subtotal').textContent = `₹${subtotal}`;
            document.getElementById('total').textContent = `₹${subtotal}`;
        }

        function showNotification(message, type = 'success') {
            const colors = {
                success: 'bg-green-500',
                error: 'bg-red-500',
                info: 'bg-blue-500'
            };

            const notification = document.createElement('div');
            notification.className = `fixed top-5 right-5 ${colors[type]} text-white p-4 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <i class="ri-check-line mr-2"></i>
                    <span>${message}</span>
                </div>
            `;

            document.body.appendChild(notification);

            // Slide in
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 100);

            // Auto remove
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    if (notification.parentNode) {
                        document.body.removeChild(notification);
                    }
                }, 300);
            }, 3000);
        }
    </script>

    <%- include('./partials/footer') %>